ext {
	GROUPID = 'de.tomgrill.gdxfacebook'
	VERSION = '0.1.0-SNAPSHOT'
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'org.robovm:robovm-gradle-plugin:1.0.0-beta-04'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = 'gdx-facebook'
        gdxVersion = '1.5.5'
        roboVMVersion = '1.0.0-beta-04'

		jUnitVersion = '4.+'
	    mockitoVersion = '1.10.+'
	    powermockVersion = '1.6.+'

		

    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

	group = GROUPID
    version = VERSION
}

project(":gdx-facebook-android") {
    apply plugin : 'java'
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	}  

	eclipse {
		project {
		    name = appName + "-android"
		}
	}

	dependencies {
		
		compile project(':gdx-facebook-core')
		compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"		
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}

project(":gdx-facebook-android-tests") {
    apply plugin : 'java'

	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	}     	
    	
	eclipse {
		project {
		    name = appName + "-android-tests"
		}
	}

	dependencies {
		
		compile project(':gdx-facebook-android')
		
		
		compile "junit:junit:$jUnitVersion"
		compile "org.mockito:mockito-all:$mockitoVersion"
		compile "org.powermock:powermock-mockito-release-full:$powermockVersion"
		
		
	}
}

project(":gdx-facebook-core") {
    apply plugin : 'java'
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-core"
		}
	}

	dependencies {
		compile "com.badlogicgames.gdx:gdx:$gdxVersion"
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}

project(":gdx-facebook-core-tests") {
    apply plugin : 'java'
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-core-tests"
		}
	}
	dependencies {
		
		compile project(':gdx-facebook-core')
		
		compile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		
//		compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
		
		compile "junit:junit:$jUnitVersion"
		compile "org.mockito:mockito-all:$mockitoVersion"
		compile "org.powermock:powermock-mockito-release-full:$powermockVersion"

		/** required for running test from eclipse */
		compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		
		/* required to prevent Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit - ERROR */
		testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}



project(":gdx-facebook-desktop") {
    apply plugin : 'java'
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-desktop"
		}
	}

	dependencies {
		
		compile project(':gdx-facebook-core')
		
//		compile "com.badlogicgames.gdx:gdx-backend-desktop:$gdxVersion"
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}

project(":gdx-facebook-desktop-tests") {
    apply plugin : 'java'

	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 	
    
    	
	eclipse {
		project {
		    name = appName + "-desktop-tests"
		}
	}

	dependencies {
		
		compile project(':gdx-facebook-desktop')
		
	//	compile "com.badlogicgames.gdx:gdx-backend-desktop:$gdxVersion"
		compile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
		
		compile "junit:junit:$jUnitVersion"
		compile "org.mockito:mockito-all:$mockitoVersion"
		compile "org.powermock:powermock-mockito-release-full:$powermockVersion"
		
		/** required for running test from eclipse */
		compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		
		/* required to prevent Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit - ERROR */
		testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}

project(":gdx-facebook-html") {
    apply plugin : 'java'
    	
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-html"
		}
	}
}

project(":gdx-facebook-html-tests") {
    apply plugin : 'java'
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-html-tests"
		}
	}
}

project(":gdx-facebook-ios") {
    apply plugin : 'java'
    apply plugin : 'robovm'
    	
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 

	eclipse {
		project {
		    name = appName + "-ios"
		}
	}

	dependencies {
		
		compile project(':gdx-facebook-core')
		
		compile "org.robovm:robovm-rt:${roboVMVersion}"
        compile "org.robovm:robovm-cocoatouch:${roboVMVersion}"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
//        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
		
		compile fileTree(dir: 'libs', include: '*.jar')
	}
}

project(":gdx-facebook-ios-tests") {
    apply plugin : 'java'
    	
	apply from : '../publish.gradle'

    configurations {
        custom
        compile.extendsFrom custom
	} 
    
	eclipse {
		project {
		    name = appName + "-ios-tests"
		}
	}
	
	dependencies {
		
		compile project(':gdx-facebook-ios')
		
		compile "junit:junit:$jUnitVersion"
		compile "org.mockito:mockito-all:$mockitoVersion"
		compile "org.powermock:powermock-mockito-release-full:$powermockVersion"
		
		
		
	}
	
}

tasks.eclipse.doLast {
    delete ".project"
}
